openapi: 3.1.0
info:
  title: "Projom core API documentation"
  version: 0.0.1

servers:
  - url: "192.168.1.9"
    description: "Production server"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    auth_user:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    jwt_response:
      type: object
      properties:
        jwt:
          type: string
    user:
      type: object
      properties:
        user_id:
          type: integer
        username:
          type: string
        email:
          type: string
        password:
          type: string
          description: "Password is redacted from responses"
        active:
          type: boolean
        deleted:
          type: boolean
        deleted_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
tags:
  - name: "Users"
    description: ""

paths:
  /users:
    get:
      operationId: projom_user_controller@getAll
      summary: Get all users
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          description: Maximum number of users to return
          required: false
          schema:
            type: integer
        - name: page
          in: query
          description: Page number of users to return
          required: false
          schema:
            type: integer
        - name: sort
          in: query
          description: Sort order on firstname (asc or desc)
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/user"
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Users not found
        "500":
          description: Internal Server Error
    post:
      operationId: projom_user_controller@create
      summary: Create a new user
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/auth_user"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "409":
          description: User already exists
        "500":
          description: Internal Server Error
  /users/{id}:
    get:
      operationId: projom_user_controller@get
      summary: Get a user by ID
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: User not found
        "500":
          description: Internal Server Error
    put:
      operationId: projom_user_controller@updateOrReplace
      summary: Update/replace a user by ID
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of user to update or replace
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: User not found
        "409":
          description: User already exists'
        "500":
          description: Internal Server Error
    patch:
      operationId: projom_user_controller@update
      summary: Update a user by ID
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of user to update
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: User not found
        "500":
          description: Internal Server Error
    delete:
      operationId: projom_user_controller@delete
      summary: Delete a user by ID
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of user to delete
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: User not found
        "500":
          description: Internal Server Error
